apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: version2
  name: version2
  namespace: trivago
spec:
  replicas: 1
  selector:
    matchLabels:
      app: version2
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: version2
    spec:
      volumes:
        - name: shared-data
          emptyDir: {}
      initContainers:
       - name: content-container
         image: debian
         volumeMounts:
           - name: shared-data
             mountPath: /pod-data
         command: ["/bin/sh"]
         args: ["-c", "echo I am version v2! > /pod-data/index.html"]
      containers:
      - image: docker.io/nginx:1.24.0
        name: nginx-v2
        volumeMounts:
          - name: shared-data
            mountPath: /usr/share/nginx/html/
        ports:
        - containerPort: 80
        resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: version2
  name: version2
  namespace: trivago
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: version2
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  generation: 2
  name: version2
  namespace: trivago
spec:
  ingressClassName: traefik
  rules:
  - host: version2.trivago.apps.com
    http:
      paths:
      - backend:
          service:
            name: version2
            port:
              number: 80
        path: /
        pathType: Prefix
status:
  loadBalancer: {}
